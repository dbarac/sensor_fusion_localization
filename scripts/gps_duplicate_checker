#!/usr/bin/env python3
import rclpy
from rclpy.node import Node
from sensor_msgs.msg import NavSatFix

class GPSDuplicateChecker(Node):
    def __init__(self):
        super().__init__('gps_duplicate_checker')
        self.get_logger().info("Checking for duplicated NavSatFix messages on /fix...")
        self.publisher_ = self.create_publisher(NavSatFix, '/fix/checked', 10)
        self.last_pos = None
        self.subscription = self.create_subscription(
            NavSatFix, "fix", self.publish_if_position_changed, 10
        )

    def publish_if_position_changed(self, msg):
        current_pos = msg.latitude, msg.longitude
        if self.last_pos is None or self.last_pos != current_pos:
            self.publisher_.publish(msg)
        elif self.last_pos is not None:
            self.get_logger().info(f"Discarding message with repeated exact position on /fix topic: {current_pos}")

        self.last_pos = current_pos


def main(args=None):
    rclpy.init(args=args)

    gps_checker = GPSDuplicateChecker()

    rclpy.spin(gps_checker)

    gps_checker.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()