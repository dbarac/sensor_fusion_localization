# For parameter descriptions, please refer to the template parameter files for each node.
ekf_odom:
  ros__parameters:

    use_sim_time: false
    frequency: 30.0
    sensor_timeout: 0.1
    two_d_mode: true
    transform_time_offset: 0.0
    transform_timeout: 0.0
    print_diagnostics: true
    debug: false
    debug_out_file: /tmp/rl_debug.txt
  
    map_frame: map
    odom_frame: odom
    base_link_frame: base_link
    world_frame: odom
  
    publish_tf: true

navsat_transform:
  ros__parameters:

    frequency: 30.0
    delay: 3.0

    #magnetic_declination_radians: 0.1340413 # taking from first GPS measure (Latitude:	33.0337693283° S Longitude:	60.8846327467° W ----->  7.68° W  ± 0.38°)
    # Your IMU's yaw, once the magentic_declination_radians value is added to it, should report 0 when facing east. If it
    # doesn't, enter the offset here. Defaults to 0.
    #yaw_offset: -1.570796327  # IMU reads 0 facing magnetic north, not east # ESTO ES QUALQUIERA!!!!!!
    yaw_offset: 0.0  # IMU reads 0 facing magnetic north, not east


    # If this is true, the altitude is set to 0 in the output odometry message. Defaults to false.
    zero_altitude: true
    #broadcast_utm_transform: true
    publish_filtered_gps: true

    # If this is true, the node ignores the IMU data and gets its heading from the odometry source (typically the
    # /odometry/filtered topic coming from one of robot_localization's state estimation nodes). BE CAREFUL when using this!
    # The yaw value in your odometry source *must* be world-referenced, e.g., you cannot use your odometry source for yaw
    # if your yaw data is based purely on integrated velocities. Defaults to false.
    use_odometry_yaw: false

    wait_for_datum: false
